---
description: 메가존 BO Next.js 프로젝트 - 메인 규칙
globs: []
alwaysApply: true
---

# 메가존 BO Next.js 프로젝트

메가존 Back Office용 Next.js 애플리케이션 템플릿

## 기본 지침

- 모든 대화와 주석은 한글로 작성
- 실행 가능한 프로덕션 수준 코드 작성
- 기존 코드 패턴과 컨벤션 준수

## 핵심 기술 스택

**프레임워크**: Next.js 15.3.3 (App Router), React 19.1.0, TypeScript 5.8.3  
**UI**: Tailwind CSS 4.1.8, shadcn/ui, Radix UI, Lucide React  
**상태관리**: TanStack Query 5.80.6 (서버), Zustand 5.0.5 (클라이언트)  
**폼**: React Hook Form 7.57.0 + Zod 3.25.61  
**개발도구**: Storybook 9.0.8, Vitest 3.2.3, ESLint + Prettier

## 프로젝트 구조

```
app/                    # Next.js App Router
├── (private)/         # 인증 필요 라우트
├── (public)/          # 공개 라우트  
├── api/               # API 라우트
└── actions/           # 서버 액션

components/            # 재사용 컴포넌트
├── ui/               # shadcn/ui 컴포넌트
├── common/           # 공통 컴포넌트
└── page/             # 페이지별 컴포넌트

lib/                  # 유틸리티 (httpClient, utils 등)
services/             # API 서비스 레이어
store/                # Zustand 상태 관리
types/                # 타입 정의
hooks/                # 커스텀 훅
```

## 코딩 컨벤션

### TypeScript
- `any` 타입 사용 금지
- interface보다 type 사용 권장
- 명시적 타입 정의 필수

### React
- 함수형 컴포넌트만 사용
- Named exports 사용 (default export 지양)
- Server Components 우선, Client Components는 'use client' 명시

### 파일 명명
- 컴포넌트: `PascalCase.tsx`
- 디렉토리: `kebab-case`
- 훅: `camelCase` (use 접두사)
- 함수: `camelCase`
- 이벤트 핸들러: `handle` 접두사
- Boolean 변수: `is/has/can` 접두사

### Next.js App Router
- Route Groups 활용: `(private)`, `(public)`
- 파일 기반 라우팅 시스템 활용

### 스타일링
- Tailwind CSS 사용
- shadcn/ui 컴포넌트 활용
- `cn()` 유틸리티로 클래스 병합

## 참조 파일

- @README.md - 프로젝트 개요
- @package.json - 의존성 정보
- @middleware.ts - 인증 미들웨어